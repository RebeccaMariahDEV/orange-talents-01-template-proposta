server.port=8083

##Propriedades para banco local(MYSQL)
#spring.datasource.url= jdbc:mysql://localhost:3306/proposta?useTimezone=true&serverTimezone=UTC&createDatabaseIfNotExist=true
#spring.datasource.username=rebecca
#spring.datasource.password=123
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.ddl-auto=update

#h2
# datasource
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:propostas
spring.datasource.username=sa
spring.datasource.password=

# jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#CORS
management.endpoints.web.cors.allowed-origins=https://
management.endpoints.web.cors.allowed-methods=GET

#Metricas de monitoramento
#management.endpoints.web.exposure.include=info,health,prometheus
#mostrar todos
#management.endpoints.web.exposure.include=*
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
#management.metrics.export.jmx.domain=

#monitoramento web
#management.endpoint.cache.time-to-live=10s
#management.endpoints.enabled-by-default=false
#management.endpoint.health.enabled=true
#management.endpoint.metrics.enabled=true

#jonathas
##actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.info.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoints.web.exposure.include=info,health,metrics,prometheus

#config keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWK_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# configuracao de OpenTracing para JDBC caso ele estese travado no log "Triggering deferred initialization of Spring
#Data repositories…"
#opentracing.spring.cloud.jdbc.enabled=false

########################## testes que falharam ######################
#management.endpoints.web.base-path=/health
#management.endpoints.web.exposure.include=info,health
#management.endpoints.web.exposure.exclude=env,beans
#management.endpoints.enabled-by-default=false
#management.endpoint.info.enabled=true
#analise.host=${ANALISE_URL:http://localhost:9999/api/solicitacao/health }
